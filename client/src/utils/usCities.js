// Popular US cities for autocomplete
export const US_CITIES = [
  "Sonoma",
  "Napa",
  "Petaluma",
  "Santa Rosa",
  "rohner park",
  "san rafael",
  "San Francisco",
  "richmond",
  "oakland",
  "berkeley",
  "san jose",
  "sacramento",
  "los angeles",
  "New York",
  "Los Angeles",
  "Chicago",
  "Houston",
  "Phoenix",
  "Philadelphia",
  "San Antonio",
  "San Diego",
  "Dallas",
  "San Jose",
  "Austin",
  "Jacksonville",
  "Fort Worth",
  "Columbus",
  "Charlotte",
  "Indianapolis",
  "Seattle",
  "Denver",
  "Washington",
  "Boston",
  "El Paso",
  "Nashville",
  "Detroit",
  "Oklahoma City",
  "Portland",
  "Las Vegas",
  "Memphis",
  "Louisville",
  "Baltimore",
  "Milwaukee",
  "Albuquerque",
  "Tucson",
  "Fresno",
  "Mesa",
  "Kansas City",
  "Atlanta",
  "Long Beach",
  "Colorado Springs",
  "Raleigh",
  "Miami",
  "Virginia Beach",
  "Omaha",
  "Oakland",
  "Minneapolis",
  "Tulsa",
  "Arlington",
  "Tampa",
  "New Orleans",
  "Wichita",
  "Cleveland",
  "Bakersfield",
  "Aurora",
  "Anaheim",
  "Honolulu",
  "Santa Ana",
  "Riverside",
  "Corpus Christi",
  "Lexington",
  "Stockton",
  "Henderson",
  "Saint Paul",
  "St. Louis",
  "Cincinnati",
  "Pittsburgh",
  "Greensboro",
  "Anchorage",
  "Plano",
  "Lincoln",
  "Orlando",
  "Irvine",
  "Newark",
  "Durham",
  "Chula Vista",
  "Toledo",
  "Fort Wayne",
  "St. Petersburg",
  "Laredo",
  "Jersey City",
  "Chandler",
  "Madison",
  "Lubbock",
  "Scottsdale",
  "Reno",
  "Buffalo",
  "Gilbert",
  "Glendale",
  "North Las Vegas",
  "Winston-Salem",
  "Chesapeake",
  "Norfolk",
  "Fremont",
  "Garland",
  "Irving",
  "Hialeah",
  "Richmond",
  "Boise",
  "Spokane",
  "Baton Rouge",
];

/**
 * Filter cities based on user input
 * @param {string} input - User input
 * @param {number} limit - Maximum number of results
 * @returns {string[]} - Filtered cities
 */
export const filterCities = (input, limit = 10) => {
  if (!input || input.length < 2) return [];

  const searchTerm = input.toLowerCase();
  return US_CITIES.filter((city) =>
    city.toLowerCase().includes(searchTerm)
  ).slice(0, limit);
};
